import { useState, useEffect } from 'react'
import { io, Socket } from 'socket.io-client'
import Counter from './components/Counter'
import Achievements from './components/Achievements'
import useCounter from './hooks/useCounter'
import './App.css'

interface Achievement {
  name: string
  description: string
  earned: boolean
}

interface Achievements {
  firstClick: Achievement
  tenClicks: Achievement
  hundredClicks: Achievement
  telegramUser: Achievement
  aiChatter: Achievement
}

function App() {
  const { count, increment, decrement, isLoading, error } = useCounter()
  const [socket, setSocket] = useState<Socket | null>(null)
  const [achievements, setAchievements] = useState<Achievements>({
    firstClick: { name: "–ü–µ—Ä–≤—ã–π –∫–ª–∏–∫", description: "–°–¥–µ–ª–∞–ª–∏ –ø–µ—Ä–≤—ã–π –∫–ª–∏–∫", earned: false },
    tenClicks: { name: "–î–µ—Å—è—Ç–∫–∞", description: "–î–æ—Å—Ç–∏–≥–ª–∏ 10 –∫–ª–∏–∫–æ–≤", earned: false },
    hundredClicks: { name: "–°–æ—Ç–Ω—è", description: "–î–æ—Å—Ç–∏–≥–ª–∏ 100 –∫–ª–∏–∫–æ–≤", earned: false },
    telegramUser: { name: "–¢–µ–ª–µ–≥—Ä–∞–º–º–µ—Ä", description: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ Telegram –±–æ—Ç–∞", earned: false },
    aiChatter: { name: "–ò–ò –ß–∞—Ç—Ç–µ—Ä", description: "–ü–æ–æ–±—â–∞–ª–∏—Å—å —Å –ò–ò", earned: false }
  })
  const [newAchievement, setNewAchievement] = useState<string | null>(null)

  useEffect(() => {
    // Connect to WebSocket
    const newSocket = io('http://localhost:3001')
    setSocket(newSocket)

    // Listen for counter updates
    newSocket.on('counterUpdate', (value: number) => {
      setCount(value)
    })

    // Listen for achievements updates
    newSocket.on('achievementsUpdate', (newAchievements: Achievements) => {
      setAchievements(newAchievements)
      
      // Check for new achievements
      Object.entries(newAchievements).forEach(([key, achievement]) => {
        if (achievement.earned && !achievements[key as keyof Achievements].earned) {
          setNewAchievement(achievement.name)
          setTimeout(() => setNewAchievement(null), 3000)
        }
      })
    })

    return () => {
      newSocket.close()
    }
  }, [])

  // Error handling display
  if (error) {
    console.error('Counter error:', error)
  }

  return (
    <div className="app">
      <header className="app-header">
        <h1>üöÄ –ù–æ–≤—ã–π MCP –ü—Ä–æ–µ–∫—Ç</h1>
        <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å Telegram –±–æ—Ç–æ–º –∏ –ò–ò!</p>
      </header>
      
      <main className="app-main">
        {/* Error Display */}
        {error && (
          <div className="error-message">
            <p>–û—à–∏–±–∫–∞: {error}</p>
          </div>
        )}

        {/* Loading Indicator */}
        {isLoading && (
          <div className="loading-indicator">
            <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          </div>
        )}

        <Counter 
          count={count}
          onIncrement={increment}
          onDecrement={decrement}
        />

        <Achievements 
          achievements={achievements}
          newAchievement={newAchievement}
        />

        <div className="features">
          <h2>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</h2>
          <ul>
            <li>‚úÖ React 18 —Å TypeScript</li>
            <li>‚úÖ Vite –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Å–±–æ—Ä–∫–∏</li>
            <li>‚úÖ Telegram Bot –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</li>
            <li>‚úÖ –ò–ò —á–∞—Ç —Å OpenAI</li>
            <li>‚úÖ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</li>
            <li>‚úÖ Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
            <li>‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π CSS</li>
          </ul>
        </div>

        <div className="telegram-info">
          <h2>ü§ñ Telegram Bot</h2>
          <p>–ù–∞–π–¥–∏—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:</p>
          <div className="bot-commands">
            <code>/start</code> - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º<br/>
            <code>/counter</code> - –ü–æ–∫–∞–∑–∞—Ç—å —Å—á–µ—Ç—á–∏–∫<br/>
            <code>/increment</code> - –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫<br/>
            <code>/decrement</code> - –£–º–µ–Ω—å—à–∏—Ç—å —Å—á–µ—Ç—á–∏–∫<br/>
            <code>/chat</code> - –ß–∞—Ç —Å –ò–ò<br/>
            <code>/achievements</code> - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
          </div>
        </div>
      </main>

      <footer className="app-footer">
        <p>–°–æ–∑–¥–∞–Ω–æ —Å ‚ù§Ô∏è –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</p>
      </footer>
    </div>
  )
}

export default App
